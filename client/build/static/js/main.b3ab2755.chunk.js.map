{"version":3,"sources":["Symbol.js","Dates.js","Amount.js","Profit.js","App.js","reportWebVitals.js","index.js"],"names":["customStyles","option","provided","color","control","border","boxShadow","singleValue","Symbol","handleSymbolChange","event","setState","symbol","label","props","getSymbol","state","options","axios","get","then","response","data","currencies","selectedOption","this","value","className","onChange","placeholder","styles","React","Component","Dates","buydate","Date","setHours","setMinutes","setSeconds","selldate","getMinutes","useState","startDate","setStartDate","endDate","setEndDate","style","marginRight","selected","date","console","log","getStartDate","getTime","toLocaleString","changeStart","timeInputLabel","dateFormat","showTimeInput","getEndDate","changeEnd","Amount","handleAmountChange","getAmount","target","amount","fontSize","Profit","formatter","Intl","NumberFormat","currency","minimumFractionDigits","updateSymbol","newsymbol","updateAmount","newamount","updateStartDate","newdate","newdatestring","buydatestring","updateEndDate","selldatestring","buttonClick","isLoading","profit","post","isFinite","String","error","onClick","format","toUpperCase","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ab2755.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\n\r\n//change font color and remove border\r\nconst customStyles = {\r\n  option: (provided) => ({\r\n    ...provided,\r\n    color: \"#5d6d7e\",\r\n  }),\r\n  control: (provided) => ({\r\n    ...provided,\r\n    border: 0,\r\n    boxShadow: \"none\",\r\n    color: \"#5d6d7e\",\r\n  }),\r\n  singleValue: (provided) => ({\r\n    ...provided,\r\n    color: \"#5d6d7e\",\r\n  }),\r\n};\r\n\r\nexport default class Symbol extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      symbol: \"\",\r\n      options: [],\r\n    };\r\n\r\n    axios.get(\"/currencies\").then((response) => {\r\n      this.setState({\r\n        options: response.data.currencies,\r\n      });\r\n    });\r\n  }\r\n\r\n  //update symbol change to Profit.js\r\n  handleSymbolChange = (event) => {\r\n    this.setState({\r\n      symbol: event.label,\r\n    });\r\n    this.props.getSymbol(event.label);\r\n  };\r\n\r\n  render() {\r\n    const { selectedOption } = this.state.symbol;\r\n    return (\r\n      <div>\r\n        <div>\r\n          Enter symbol:\r\n          <Select\r\n            value={selectedOption}\r\n            options={this.state.options}\r\n            className=\"Select\"\r\n            onChange={this.handleSymbolChange}\r\n            placeholder=\"'BTC'\"\r\n            styles={customStyles}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nvar Dates = (props) => {\r\n  //set initial buying and selling date as appropriate\r\n  var buydate = new Date();\r\n  buydate.setHours(0);\r\n  buydate.setMinutes(0);\r\n  buydate.setSeconds(0);\r\n  var selldate = new Date();\r\n  selldate.setMinutes(selldate.getMinutes() - 1);\r\n\r\n  const [startDate, setStartDate] = useState(buydate);\r\n  const [endDate, setEndDate] = useState(selldate);\r\n\r\n  //send back to profit.js to update dates\r\n  function changeStart(date) {\r\n    setStartDate(date);\r\n    console.log(date);\r\n    props.getStartDate(date.getTime(), date.toLocaleString());\r\n  }\r\n  function changeEnd(date) {\r\n    setEndDate(date);\r\n    console.log(date);\r\n    props.getEndDate(date.getTime(), date.toLocaleString());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <a style={{ marginRight: \"15px\" }}>Enter buying date:</a>\r\n        <DatePicker\r\n          className=\"Input\"\r\n          selected={startDate}\r\n          onChange={(date) => changeStart(date)}\r\n          timeInputLabel=\"Time:\"\r\n          dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n          showTimeInput\r\n        />\r\n      </div>\r\n      <div>\r\n        <a style={{ marginRight: \"15px\" }}>Enter selling date:</a>\r\n        <DatePicker\r\n          className=\"Input\"\r\n          selected={endDate}\r\n          onChange={(date) => changeEnd(date)}\r\n          timeInputLabel=\"Time:\"\r\n          dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n          showTimeInput\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dates;\r\n","import React from \"react\";\r\n\r\nexport default class Amount extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      amount: 0,\r\n    };\r\n  }\r\n\r\n  //Update amount to Profit.js\r\n  handleAmountChange = (event) => {\r\n    this.props.getAmount(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <a style={{ marginRight: \"15px\" }}>Enter amount:</a>\r\n          <a style={{ fontSize: \"21px\" }}>$ </a>\r\n          <input\r\n            className=\"Input\"\r\n            value={this.state.value}\r\n            onChange={this.handleAmountChange}\r\n            placeholder=\"'1000'\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Symbol from \"./Symbol.js\";\r\nimport Dates from \"./Dates.js\";\r\nimport Amount from \"./Amount.js\";\r\n\r\nexport default class Profit extends React.Component {\r\n  constructor() {\r\n    super();\r\n    //initialize buying and selling dates\r\n    var buydate = new Date();\r\n    buydate.setHours(0);\r\n    buydate.setMinutes(0);\r\n    buydate.setSeconds(0);\r\n    var selldate = new Date();\r\n    selldate.setMinutes(selldate.getMinutes() - 1);\r\n\r\n    this.state = {\r\n      symbol: \"\",\r\n      buydate: buydate.getTime(),\r\n      buydatestring: buydate.toLocaleString(),\r\n      selldate: selldate.getTime(),\r\n      selldatestring: selldate.toLocaleString(),\r\n      amount: 0,\r\n      profit: 0,\r\n      isLoading: null,\r\n      error: 0,\r\n    };\r\n  }\r\n\r\n  //format profit amount as US currency\r\n  formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 2,\r\n  });\r\n\r\n  updateSymbol = (newsymbol) => {\r\n    this.setState({\r\n      symbol: newsymbol,\r\n    });\r\n  };\r\n\r\n  updateAmount = (newamount) => {\r\n    this.setState({\r\n      amount: newamount,\r\n    });\r\n  };\r\n\r\n  updateStartDate = (newdate, newdatestring) => {\r\n    this.setState({\r\n      buydate: newdate,\r\n      buydatestring: newdatestring,\r\n    });\r\n  };\r\n\r\n  updateEndDate = (newdate, newdatestring) => {\r\n    this.setState({\r\n      selldate: newdate,\r\n      selldatestring: newdatestring,\r\n    });\r\n  };\r\n\r\n  buttonClick = () => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    //Send and get profit from server\r\n    axios.get(\"/profit\").then((response) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        profit: response.data.profit,\r\n      });\r\n    });\r\n    axios.post(\"/symbol\", {\r\n      symbol: this.state.symbol,\r\n    });\r\n    axios.post(\"/buydate\", {\r\n      buydate: this.state.buydate,\r\n    });\r\n    axios.post(\"/selldate\", {\r\n      selldate: this.state.selldate,\r\n    });\r\n    axios.post(\"/amount\", {\r\n      amount: this.state.amount,\r\n    });\r\n\r\n    //Error handling\r\n    if (!isFinite(String(this.state.amount))) {\r\n      this.setState({\r\n        error: 1,\r\n      });\r\n    }\r\n    if (this.state.buydate > new Date().getTime()) {\r\n      this.setState({\r\n        error: 2,\r\n      });\r\n    } else if (this.state.selldate > new Date().getTime()) {\r\n      this.setState({\r\n        error: 3,\r\n      });\r\n    } else if (this.state.buydate > this.state.selldate) {\r\n      this.setState({\r\n        error: 4,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Body\">\r\n        <Symbol getSymbol={this.updateSymbol}></Symbol>\r\n        <Amount getAmount={this.updateAmount}></Amount>\r\n        <Dates\r\n          getStartDate={this.updateStartDate}\r\n          getEndDate={this.updateEndDate}\r\n        ></Dates>\r\n        <div>\r\n          <button className=\"Button\" onClick={this.buttonClick}>\r\n            Get Profit!\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.profit === \"error\" && this.state.error === 0 && (\r\n          <div style={{ color: \"#F1948A\" }}>\r\n            This currency is not supported this far back!\r\n          </div>\r\n        )}\r\n        {this.state.error === 1 && (\r\n          <div style={{ color: \"#F1948A\" }}>Entered amount is invalid!</div>\r\n        )}\r\n        {this.state.error === 2 && (\r\n          <div style={{ color: \"#F1948A\" }}>\r\n            Buying date is past current time!\r\n          </div>\r\n        )}\r\n        {this.state.error === 3 && (\r\n          <div style={{ color: \"#F1948A\" }}>\r\n            Selling date is past current time!\r\n          </div>\r\n        )}\r\n\r\n        {this.state.error === 4 && (\r\n          <div style={{ color: \"#F1948A\" }}>\r\n            Buying date is past selling date!\r\n          </div>\r\n        )}\r\n\r\n        {/* Loading state while data is being fetched */}\r\n        {this.state.isLoading === true &&\r\n          !this.state.error &&\r\n          this.state.profit !== \"error\" && <div>Loading...</div>}\r\n\r\n        {/* Show profit data */}\r\n        {this.state.isLoading === false &&\r\n          !this.state.error &&\r\n          this.state.profit !== \"error\" && (\r\n            <div>\r\n              The amount of profit from buying{\" \"}\r\n              {this.formatter.format(this.state.amount)} of{\" \"}\r\n              {this.state.symbol.toUpperCase()} from {this.state.buydatestring}{\" \"}\r\n              to {this.state.selldatestring} is:{\" \"}\r\n              <div className=\"Profit\">\r\n                {this.state.profit < 0 ? (\r\n                  <a style={{ color: \"#F1948A\" }}>\r\n                    {this.formatter.format(this.state.profit)}\r\n                  </a>\r\n                ) : (\r\n                  <a style={{ color: \"#73c6b6\" }}>\r\n                    {this.formatter.format(this.state.profit)}\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Profit from \"./Profit.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <header className=\"Header\">Cryptocurrency Profit Calculator</header>\n        <header className=\"SubHeader\">\n          Get the amount of profit from investing in any cryptocurrency at any\n          date and time!\n          <hr className=\"Hr\" />\n        </header>\n        <Profit />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}